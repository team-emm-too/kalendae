{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","eventName","eventLocation","start","end","eventDescription","repeat","class","priority","error","repeatOptions","key","value","text","classOptions","priorityOptions","submit","e","formData","preventDefault","element","document","createElement","date","Date","formError","errorMessages","push","currentDateTime","getFullYear","getMonth","getDate","slice","getHours","getMinutes","getSeconds","recurrence","classification","setAttribute","split","join","replace","console","log","setState","style","display","body","appendChild","click","removeChild","handleChange","target","name","this","className","Menu","Header","as","Grid","container","Column","textAlign","Form","onSubmit","Input","required","fluid","label","placeholder","onChange","Group","widths","type","Select","options","control","TextArea","Button","length","Message","header","list","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.0aba9503.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { Form, Grid, Header, Menu, Message, TextArea } from 'semantic-ui-react';\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    eventName: \"\",\r\n    eventLocation: \"\",\r\n    start: \"\",\r\n    end: \"\",\r\n    eventDescription: \"\",\r\n    repeat: \"\",\r\n    class: \"\",\r\n    priority: \"\",\r\n    error: [],\r\n    repeatOptions: [\r\n      { key: 'd', value: 'DAILY', text: 'Daily' },\r\n      { key: 'w', value: 'WEEKLY', text: 'Weekly' },\r\n      { key: 'm', value: 'MONTHLY', text: 'Monthly' },\r\n      { key: 'y', value: 'YEARLY', text: 'Yearly' },\r\n    ],\r\n    classOptions: [\r\n      { key: 'u', value: 'PUBLIC', text: 'Public' },\r\n      { key: 'r', value: 'PRIVATE', text: 'Private' },\r\n      { key: 'CONFIDENTIAL', text: 'Confidential' },\r\n    ],\r\n    priorityOptions: [\r\n      { key: 'h', value: '1', text: 'High' },\r\n      { key: 'm', value: '5', text: 'Medium' },\r\n      { key: 'l', value: '9', text: 'Low' },\r\n    ],\r\n  };\r\n\r\n  submit = (e, { formData }) => {\r\n    e.preventDefault();\r\n    let element = document.createElement('a');\r\n    let date = new Date();\r\n    let startDate = new Date(this.state.start);\r\n    let endDate = new Date(this.state.end);\r\n    let formError = false;\r\n    let errorMessages = [];\r\n\r\n    if (startDate > endDate) {\r\n      formError = true;\r\n      errorMessages.push(\"The event start date cannot be later than the event end date!\")\r\n    }\r\n\r\n    let currentDateTime = date.getFullYear() + '' +\r\n        +'' + (date.getMonth() + 1) + '' + (\"0\" + date.getDate()).slice(-2) + 'T' +\r\n        (\"0\" + date.getHours()).slice(-2) + '' + (\"0\" + date.getMinutes()).slice(-2) + '' +\r\n        (\"0\" + date.getSeconds()).slice(-2);\r\n    let recurrence = '';\r\n    let classification = '';\r\n    let priority = '';\r\n\r\n    if (this.state.repeat !== '') {\r\n      recurrence += 'RRULE:FREQ=' + this.state.repeat + '\\r\\n';\r\n    }\r\n\r\n    if (this.state.class !== '') {\r\n      classification += 'CLASS:' + this.state.class + '\\r\\n';\r\n    }\r\n\r\n    if (this.state.priority !== '') {\r\n      priority += 'PRIORITY:' + this.state.priority + '\\r\\n';\r\n    }\r\n\r\n    element.setAttribute('href', 'data:text/calendar;charset=utf-8,' +\r\n        //Starting Calendar\r\n        'BEGIN:VCALENDAR\\r\\n' +\r\n        //Calendar Version\r\n        'VERSION:2.0\\r\\n' +\r\n        'PRODID:-//Team-emm-too//Kalendae//EN\\r\\n' +\r\n        //Calendar Type\r\n        'CALSCALE:GREGORIAN\\r\\n' +\r\n        'METHOD:PUBLISH\\r\\n' +\r\n        //Starting Event\r\n        'BEGIN:VEVENT\\r\\n' +\r\n        'SEQUENCE:0\\r\\n' +\r\n        // Time event was created\r\n        'DTSTAMP:' + currentDateTime + '\\r\\n' +\r\n        //Start time of event\r\n        'DTSTART:' + this.state.start.split('-').join('').replace(':', '') + '00\\r\\n' +\r\n        //End time of event\r\n        'DTEND:' + this.state.end.split('-').join('').replace(':', '') + '00\\r\\n' +\r\n        //Event Name\r\n        'SUMMARY:' + this.state.eventName + '\\r\\n' +\r\n        //Event Description\r\n        'DESCRIPTION:' + this.state.eventDescription + '\\r\\n' +\r\n        //Event Location\r\n        'LOCATION:' + this.state.eventLocation + '\\r\\n' +\r\n        //Recurrence\r\n        recurrence +\r\n        //Classification\r\n        classification +\r\n        //Priority\r\n        priority +\r\n        //Ending Event\r\n        'END:VEVENT\\r\\n' +\r\n        //Ending Calendar\r\n        'END:VCALENDAR\\r\\n');\r\n\r\n    if (!formError) {\r\n      element.setAttribute('download', this.state.eventName + \".ics\");\r\n\r\n      element.style.display = 'none';\r\n      document.body.appendChild(element);\r\n\r\n      element.click();\r\n\r\n      document.body.removeChild(element);\r\n\r\n      this.setState({\r\n        eventName: \"\",\r\n        eventLocation: \"\",\r\n        start: \"\",\r\n        end: \"\",\r\n        repeat: \"\",\r\n        class: \"\",\r\n        priority: \"\",\r\n        eventDescription: \"\",\r\n        error: [],\r\n        repeatOptions: [\r\n          { key: 'd', value: 'DAILY', text: 'Daily' },\r\n          { key: 'w', value: 'WEEKLY', text: 'Weekly' },\r\n          { key: 'm', value: 'MONTHLY', text: 'Monthly' },\r\n          { key: 'y', value: 'YEARLY', text: 'Yearly' },\r\n        ],\r\n        classOptions: [\r\n          { key: 'u', value: 'PUBLIC', text: 'Public' },\r\n          { key: 'r', value: 'PRIVATE', text: 'Private' },\r\n          { key: 'CONFIDENTIAL', text: 'Confidential' },\r\n        ],\r\n        priorityOptions: [\r\n          { key: 'h', value: '1', text: 'High' },\r\n          { key: 'm', value: '5', text: 'Medium' },\r\n          { key: 'l', value: '9', text: 'Low' },\r\n        ],\r\n      });\r\n    } else {\r\n      console.log(\"error\");\r\n      this.setState({ error: errorMessages });\r\n    }\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    console.log(e.target.value.split('-').join('').replace(':', ''));\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.error);\r\n    return (\r\n        <div className=\"App\">\r\n          <Menu>\r\n            <Header as=\"h1\">Kalendae</Header>\r\n          </Menu>\r\n          <Grid container>\r\n            <Grid.Column>\r\n              <Header as=\"h2\" textAlign=\"center\" className='white'>Add an Event!</Header>\r\n              <Form onSubmit={this.submit} error>\r\n                <Form.Input required fluid name='eventName' value={this.state.eventName} label='Event Name'\r\n                            placeholder='Ex. New Year Party' onChange={this.handleChange}/>\r\n                <Form.Group widths='equal'>\r\n                  <Form.Input required name='eventLocation' value={this.state.eventLocation} label='Location'\r\n                              placeholder='Ex. 1234 Foo St. Honolulu, HI 96821' onChange={this.handleChange}/>\r\n                  <Form.Input required name='start' value={this.state.start} label='Start Date' type='datetime-local'\r\n                              onChange={this.handleChange}/>\r\n                  <Form.Input required name='end' value={this.state.end} label='End Date' type='datetime-local'\r\n                              onChange={this.handleChange}/>\r\n                  <Form.Select name='repeat' value={this.state.repeat} label='Repeat' options={this.state.repeatOptions}\r\n                               onChange={\r\n                                 (e, { value }) => {\r\n                                   this.setState({ repeat: value });\r\n                                 }\r\n                               }\r\n                  />\r\n                  <Form.Select name='classification' value={this.state.class} label='Classification'\r\n                               options={this.state.classOptions}\r\n                               onChange={\r\n                                 (e, { value }) => {\r\n                                   this.setState({ class: value });\r\n                                 }\r\n                               }\r\n                  />\r\n                  <Form.Select name='priority' value={this.state.priority} label='Priority'\r\n                               options={this.state.priorityOptions}\r\n                               onChange={\r\n                                 (e, { value }) => {\r\n                                   this.setState({ priority: value });\r\n                                 }\r\n                               }\r\n                  />\r\n                </Form.Group>\r\n                <Form.Input name='eventDescription' value={this.state.eventDescription} control={TextArea}\r\n                            label='Event Description' placeholder='Ex. New Year Party' onChange={this.handleChange}/>\r\n\r\n                <Form.Button>Submit</Form.Button>\r\n                {this.state.error.length !== 0 ? <Message\r\n                    error\r\n                    header='Action Forbidden'\r\n                    list={this.state.error}\r\n                /> : \"\"}\r\n              </Form>\r\n              <br/>\r\n              <br/>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}