{"version":3,"sources":["App.js","index.js"],"names":["App","state","eventName","eventLocation","start","end","eventDescription","repeat","class","priority","error","timezone","RSVP","toRSVP","arrRSVP","GEO","sender","resources","repeatOptions","key","value","text","classOptions","priorityOptions","submit","e","preventDefault","element","document","createElement","date","Date","formError","errorMessages","push","currentDateTime","getFullYear","getMonth","getDate","slice","getHours","getMinutes","getSeconds","recurrence","classification","Intl","DateTimeFormat","resolvedOptions","timeZone","forEach","setAttribute","split","join","replace","console","log","setState","style","display","body","appendChild","click","removeChild","handleChange","target","name","handlePlaceChange","place","formatted_address","geometry","location","lat","lng","showRSVP","handleRSVP","indexOf","arr","handleRemove","index","splice","initAutocomplete","input","getElementById","searchBox","window","google","maps","places","Autocomplete","addListener","getPlace","xhr","XMLHttpRequest","responseType","onreadystatechange","readyState","status","response","result","this","bind","open","send","className","Menu","Header","as","Grid","container","stretched","Column","textAlign","Form","onSubmit","Input","required","fluid","label","placeholder","onChange","Group","widths","id","type","Select","options","action","Button","onClick","icon","Icon","Radio","toggle","multiple","Container","List","ordered","horizontal","map","Item","backgroundColor","size","circular","color","control","TextArea","length","Message","header","list","React","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.862a59e7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { Form, Grid, Header, Menu, Message, TextArea, Button, Icon, List, Container } from 'semantic-ui-react';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        eventName: \"\",\r\n        eventLocation: \"\",\r\n        start: \"\",\r\n        end: \"\",\r\n        eventDescription: \"\",\r\n        repeat: \"\",\r\n        class: \"\",\r\n        priority: \"\",\r\n        error: [],\r\n        timezone: \"\",\r\n        RSVP: false,\r\n        toRSVP: \"\",\r\n        arrRSVP: [],\r\n        GEO: \"\",\r\n        sender: \"\",\r\n        resources: [],\r\n        repeatOptions: [\r\n            {key: 'n', value: '', text: 'No Repeat'},\r\n            {key: 'd', value: 'DAILY', text: 'Daily'},\r\n            {key: 'w', value: 'WEEKLY', text: 'Weekly'},\r\n            {key: 'm', value: 'MONTHLY', text: 'Monthly'},\r\n            {key: 'y', value: 'YEARLY', text: 'Yearly'},\r\n        ],\r\n        classOptions: [\r\n            {key: 'u', value: 'PUBLIC', text: 'Public'},\r\n            {key: 'r', value: 'PRIVATE', text: 'Private'},\r\n            {key: 'CONFIDENTIAL', text: 'Confidential'},\r\n        ],\r\n        priorityOptions: [\r\n            {key: 'h', value: '1', text: 'High'},\r\n            {key: 'm', value: '5', text: 'Medium'},\r\n            {key: 'l', value: '9', text: 'Low'},\r\n        ],\r\n    };\r\n\r\n    componentDidMount() {\r\n        let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n        let xhr = new XMLHttpRequest();\r\n        xhr.responseType = \"text\";//force the HTTP response, response-type header to be blob\r\n        xhr.onreadystatechange = function () {\r\n             if(xhr.readyState === 4 && xhr.status === 200) {\r\n                let arr =  xhr.response.split(\"\\r\\n\");\r\n                 let result = arr.slice(arr.indexOf(\"BEGIN:VTIMEZONE\"), arr.indexOf(\"END:VTIMEZONE\") + 1).join(\"\\r\\n\");\r\n                this.setState({timezone: result});\r\n             }\r\n        }.bind(this);\r\n        xhr.open(\"GET\", `https://cors-anywhere.herokuapp.com/http://tzurl.org/zoneinfo-outlook/${timezone}`);\r\n        xhr.send();\r\n        this.initAutocomplete();\r\n    }\r\n\r\n    submit = (e) => {\r\n        e.preventDefault();\r\n        let element = document.createElement('a');\r\n        let date = new Date();\r\n        let startDate = new Date(this.state.start);\r\n        let endDate = new Date(this.state.end);\r\n        let formError = false;\r\n        let errorMessages = [];\r\n\r\n        //Date checking\r\n        if (startDate > endDate) {\r\n            formError = true;\r\n            errorMessages.push(\"The event start date cannot be later than the event end date!\")\r\n        }\r\n\r\n        let currentDateTime = date.getFullYear() + '' +\r\n            +'' + (date.getMonth() + 1) + '' + (\"0\" + date.getDate()).slice(-2) + 'T' +\r\n            (\"0\" + date.getHours()).slice(-2) + '' + (\"0\" + date.getMinutes()).slice(-2) + '' +\r\n            (\"0\" + date.getSeconds()).slice(-2);\r\n        let recurrence = '';\r\n        let classification = '';\r\n        let priority = '';\r\n        let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n        let RSVP = \"\";\r\n\r\n        if (this.state.repeat !== '') {\r\n            recurrence += 'RRULE:FREQ=' + this.state.repeat + '\\r\\n';\r\n        }\r\n\r\n        if (this.state.class !== '') {\r\n            classification += 'CLASS:' + this.state.class + '\\r\\n';\r\n        }\r\n\r\n        if (this.state.priority !== '') {\r\n            priority += 'PRIORITY:' + this.state.priority + '\\r\\n';\r\n        }\r\n\r\n        if(this.state.RSVP === true) {\r\n            this.state.arrRSVP.forEach(\r\n                (value) => RSVP += 'ATTENDEE;CUTYPE=INDIVIDUAL;ROLE=REQ-PARTICIPANT;PARTSTAT=NEEDS-ACTION;\\r\\n' + ' RSVP=TRUE:MAILTO:' + value + '\\r\\n'\r\n            )\r\n        }\r\n\r\n\r\n        element.setAttribute('href', 'data:text/calendar;charset=utf-8,' +\r\n            //Starting Calendar\r\n            'BEGIN:VCALENDAR\\r\\n' +\r\n            //Calendar Version\r\n            'VERSION:2.0\\r\\n' +\r\n            'PRODID:-//Team-emm-too//Kalendae//EN\\r\\n' +\r\n            //Calendar Type\r\n            'CALSCALE:GREGORIAN\\r\\n' +\r\n            'METHOD:PUBLISH\\r\\n' +\r\n            //Timezone info\r\n            this.state.timezone + \"\\r\\n\" +\r\n            //Starting Event\r\n            'BEGIN:VEVENT\\r\\n' +\r\n            \"UID:\" + currentDateTime + \"-kalendae@ics414.com\\r\\n\" +\r\n            'SEQUENCE:0\\r\\n' +\r\n            // Time event was created\r\n            'DTSTAMP;TZID=' + timezone + \":\" + currentDateTime + '\\r\\n' +\r\n            //Start time of event\r\n            'DTSTART;TZID=' + timezone + \":\" + this.state.start.split('-').join('').replace(':', '') + '00\\r\\n' +\r\n            //End time of event\r\n            'DTEND;TZID=' + timezone + \":\" + this.state.end.split('-').join('').replace(':', '') + '00\\r\\n' +\r\n            //Event Name\r\n            'SUMMARY:' + this.state.eventName + '\\r\\n' +\r\n            //Event Description\r\n            'DESCRIPTION:' + this.state.eventDescription + '\\r\\n' +\r\n            //Event Location\r\n            'LOCATION:' + this.state.eventLocation + '\\r\\n' +\r\n            //GEO LOCATION\r\n            'GEO:' + this.state.GEO + '\\r\\n' +\r\n            //Recurrence\r\n            recurrence +\r\n            //Classification\r\n            classification +\r\n            //Priority\r\n            priority +\r\n            //Organizer(Sender)\r\n            \"ORGANIZER:MAILTO:\" + this.state.sender + '\\r\\n' +\r\n            //Attendee\r\n            RSVP +\r\n            //Ending Event\r\n            'END:VEVENT\\r\\n' +\r\n            //Ending Calendar\r\n            'END:VCALENDAR\\r\\n');\r\n\r\n        if (!formError) {\r\n            element.setAttribute('download', this.state.eventName + \".ics\");\r\n\r\n            element.style.display = 'none';\r\n\r\n            document.body.appendChild(element);\r\n\r\n            element.click();\r\n\r\n            document.body.removeChild(element);\r\n\r\n            this.setState({\r\n                eventName: \"\",\r\n                eventLocation: \"\",\r\n                start: \"\",\r\n                end: \"\",\r\n                eventDescription: \"\",\r\n                repeat: \"\",\r\n                class: \"\",\r\n                priority: \"\",\r\n                error: [],\r\n                timezone: \"\",\r\n                RSVP: false,\r\n                toRSVP: \"\",\r\n                arrRSVP: [],\r\n                GEO: \"\",\r\n                sender: \"\",\r\n\r\n            });\r\n        } else {\r\n            console.log(\"error\");\r\n            this.setState({ error: errorMessages });\r\n        }\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n\r\n    handlePlaceChange = (place) => {\r\n        this.setState({eventLocation: place.formatted_address, GEO: `${place.geometry.location.lat()};${place.geometry.location.lng()}`});\r\n    }\r\n\r\n    showRSVP = () => {\r\n        this.setState({ RSVP: !this.state.RSVP });\r\n    }\r\n\r\n    handleRSVP = () => {\r\n        if(this.state.arrRSVP.indexOf(this.state.toRSVP) === -1) {\r\n            let arr = this.state.arrRSVP;\r\n            arr.push(this.state.toRSVP)\r\n            this.setState({ arrRSVP: arr, toRSVP: '' });\r\n        }\r\n        else {\r\n            this.setState({ toRSVP: '' });\r\n        }\r\n\r\n    }\r\n\r\n    handleRemove = (value) => {\r\n        let index = this.state.arrRSVP.indexOf(value);\r\n        let arr = this.state.arrRSVP.slice();\r\n        arr.splice(index, 1);\r\n        this.setState({ arrRSVP: arr });\r\n    }\r\n\r\n    initAutocomplete = ()=> {\r\n\r\n        // Create the search box and link it to the UI element.\r\n        const input = document.getElementById(\"pac-input\");\r\n        const searchBox = new window.google.maps.places.Autocomplete(input);\r\n\r\n        // Listen for the event fired when the user selects a prediction and retrieve\r\n        // more details for that place.\r\n        searchBox.addListener(\"place_changed\", () => {\r\n            const place = searchBox.getPlace();\r\n            this.handlePlaceChange(place)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Menu>\r\n                    <Header as=\"h1\">Kalendae</Header>\r\n                </Menu>\r\n                <Grid container stretched>\r\n                    <Grid.Column>\r\n                        <Header as=\"h2\" textAlign=\"center\" className='white'>Add an Event!</Header>\r\n                        <Form onSubmit={this.submit} error>\r\n                            <Form.Input required fluid name='eventName' value={this.state.eventName} label='Event Name'\r\n                                        placeholder='Ex. New Year Party' onChange={this.handleChange}/>\r\n                            <Form.Group widths='equal'>\r\n                                <Form.Input id=\"pac-input\" required name='eventLocation' value={this.state.eventLocation}\r\n                                            label='Location'\r\n                                            placeholder='Ex. 1234 Foo St. Honolulu, HI 96821'\r\n                                            onChange={this.handleChange}\r\n                                            />\r\n                                <Form.Input required name='start' value={this.state.start} label='Start Date'\r\n                                            type='datetime-local'\r\n                                            onChange={this.handleChange}/>\r\n                                <Form.Input required name='end' value={this.state.end} label='End Date'\r\n                                            type='datetime-local'\r\n                                            onChange={this.handleChange}/>\r\n                            </Form.Group>\r\n                            <Form.Group widths='equal'>\r\n                                <Form.Select name='repeat' value={this.state.repeat} label='Repeat'\r\n                                             options={this.state.repeatOptions}\r\n                                             onChange={\r\n                                                 (e, {value}) => {\r\n                                                     this.setState({ repeat: value });\r\n                                                 }\r\n                                             }\r\n                                />\r\n                                <Form.Select name='classification' value={this.state.class} label='Classification'\r\n                                             options={this.state.classOptions}\r\n                                             onChange={\r\n                                                 (e, {value}) => {\r\n                                                     this.setState({ class: value });\r\n                                                 }\r\n                                             }\r\n                                />\r\n                                <Form.Select name='priority' value={this.state.priority} label='Priority'\r\n                                             options={this.state.priorityOptions}\r\n                                             onChange={\r\n                                                 (e, {value}) => {\r\n                                                     this.setState({ priority: value });\r\n                                                 }\r\n                                             }\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Input action={\r\n                                    <Button type=\"button\" onClick={this.handleRSVP} icon>\r\n                                        <Icon name=\"add\"/>\r\n                                    </Button>}\r\n                                            type='text' value={this.state.toRSVP} name='Resources' label='Resources'\r\n                                            placeholder='Ex. Projector, Camera, etc.' onChange={this.handleChange}/>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Radio name='RSVP' label='RSVP' toggle onChange={this.showRSVP}/>\r\n                                {this.state.RSVP === true ?\r\n                                    <Form.Input action={\r\n                                        <Button type=\"button\" onClick={this.handleRSVP} icon>\r\n                                            <Icon name=\"add\"/>\r\n                                        </Button>}\r\n                                                type='email' value={this.state.toRSVP} multiple name='toRSVP' label='RSVP To'\r\n                                                placeholder='Ex. attendee@email.com' onChange={this.handleChange}/> : \"\"}\r\n                                {this.state.RSVP === true ?\r\n                                    <Form.Input required type='email' value={this.state.sender} name='sender' label='Organizer Email'\r\n                                                                        placeholder='Ex. organizer@email.com' onChange={this.handleChange}/> : \"\"}\r\n                                {this.state.RSVP === true ?\r\n                                    (\r\n\r\n                                        <Container fluid>\r\n                                            <Header as='h5'>Attendee List</Header>\r\n                                            <List ordered horizontal>\r\n                                            {this.state.arrRSVP.map((value) =>\r\n                                                <List.Item key={value}>\r\n                                                    {value}\r\n                                                    <Button style={{backgroundColor: 'transparent'}} type='button' size='tiny'\r\n                                                            value={value} onClick={(e) => this.handleRemove(e.target.value)} icon circular>\r\n                                                        <Icon color='red' name='close'/>\r\n                                                    </Button>\r\n                                                </List.Item>)}\r\n                                            </List>\r\n                                        </Container>\r\n                                    ): \"\"}\r\n                            </Form.Group>\r\n                            <Form.Input name='eventDescription' value={this.state.eventDescription} control={TextArea}\r\n                                        label='Event Description' placeholder='Ex. New Year Party'\r\n                                        onChange={this.handleChange}/>\r\n                            <Form.Button>Submit/Download</Form.Button>\r\n                            {this.state.error.length !== 0 ? <Message\r\n                                error\r\n                                header='Action Forbidden'\r\n                                list={this.state.error}\r\n                            /> : \"\"}\r\n                        </Form>\r\n                        <br/>\r\n                        <br/>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}