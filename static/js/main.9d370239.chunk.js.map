{"version":3,"sources":["App.js","index.js"],"names":["App","state","eventName","eventLocation","start","end","eventDescription","repeat","class","priority","error","timezone","RSVP","toRSVP","arrRSVP","GEO","sender","dateException","arrDate","resources","resource","arrMonths","emailError","repeatOptions","key","value","text","classOptions","priorityOptions","months","submit","e","preventDefault","element","document","createElement","date","Date","formError","errorMessages","push","currentDateTime","getFullYear","getMonth","getDate","slice","getHours","getMinutes","getSeconds","recurrence","classification","Intl","DateTimeFormat","resolvedOptions","timeZone","dateExceptions","length","join","forEach","substring","indexOf","split","setAttribute","replace","console","log","setState","style","display","body","appendChild","click","removeChild","handleChange","target","name","handlePlaceChange","place","formatted_address","geometry","location","lat","lng","showRSVP","handleRSVP","email","test","arr","handleResources","handleDateExceptions","handleRemove","index","splice","handleResourceRemove","handleDateRemove","initAutocomplete","input","getElementById","searchBox","window","google","maps","places","Autocomplete","addListener","getPlace","handleEnter","event","which","xhr","XMLHttpRequest","responseType","onreadystatechange","readyState","status","response","result","this","bind","open","send","className","Menu","size","inverted","Grid","margin","Row","Column","Header","as","textAlign","color","Icon","container","stretched","Segment","Form","padding","onSubmit","Input","paddingBottom","required","fluid","label","placeholder","onChange","Divider","backgroundColor","Group","widths","id","type","Select","options","multiple","action","Button","onClick","icon","onKeyDown","centered","verticalAlign","height","List","ordered","horizontal","map","Item","circular","Radio","toggle","content","pointing","control","TextArea","labelPosition","Message","header","list","React","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.9d370239.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {Form, Grid, Header, Menu, Message, TextArea, Button, Icon, List, Segment, Divider} from 'semantic-ui-react';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        eventName: \"\",\r\n        eventLocation: \"\",\r\n        start: \"\",\r\n        end: \"\",\r\n        eventDescription: \"\",\r\n        repeat: \"No Repeat\",\r\n        class: \"PUBLIC\",\r\n        priority: \"9\",\r\n        error: [],\r\n        timezone: \"\",\r\n        RSVP: false,\r\n        toRSVP: \"\",\r\n        arrRSVP: [],\r\n        GEO: \"\",\r\n        sender: \"\",\r\n        dateException: \"\",\r\n        arrDate: [],\r\n        resources: [],\r\n        resource: '',\r\n        arrMonths: [],\r\n        emailError: false,\r\n        repeatOptions: [\r\n            {key: 'n', value: \"No Repeat\", text: 'No Repeat'},\r\n            {key: 'd', value: 'DAILY', text: 'Daily'},\r\n            {key: 'w', value: 'WEEKLY', text: 'Weekly'},\r\n            {key: 'm', value: 'MONTHLY', text: 'Monthly'},\r\n            {key: 'y', value: 'YEARLY', text: 'Yearly'},\r\n        ],\r\n        classOptions: [\r\n            {key: 'u', value: 'PUBLIC', text: 'Public'},\r\n            {key: 'r', value: 'PRIVATE', text: 'Private'},\r\n            {key: 's', value: 'CONFIDENTIAL', text: 'Confidential'},\r\n        ],\r\n        priorityOptions: [\r\n            {key: 'l', value: '9', text: 'Low'},\r\n            {key: 'm', value: '5', text: 'Medium'},\r\n            {key: 'h', value: '1', text: 'High'},\r\n        ],\r\n        months: [\r\n            {key: \"JAN\", value: '1', text: \"January\"},\r\n            {key: \"FEB\", value: '2', text: \"February\"},\r\n            {key: \"MAR\", value: '3', text: \"March\"},\r\n            {key: \"APR\", value: '4', text: \"April\"},\r\n            {key: \"MAY\", value: '5', text: \"May\"},\r\n            {key: \"JUN\", value: '6', text: \"June\"},\r\n            {key: \"JUL\", value: '7', text: \"July\"},\r\n            {key: \"AUG\", value: '8', text: \"August\"},\r\n            {key: \"SEP\", value: '9', text: \"September\"},\r\n            {key: \"OCT\", value: '10', text: \"October\"},\r\n            {key: \"NOV\", value: '11', text: \"November\"},\r\n            {key: \"DEC\", value: '12', text: \"December\"},\r\n        ]\r\n    };\r\n\r\n    componentDidMount() {\r\n        let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n        let xhr = new XMLHttpRequest();\r\n        xhr.responseType = \"text\";//force the HTTP response, response-type header to be blob\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState === 4 && xhr.status === 200) {\r\n                let arr = xhr.response.split(\"\\r\\n\");\r\n                let result = arr.slice(arr.indexOf(\"BEGIN:VTIMEZONE\"), arr.indexOf(\"END:VTIMEZONE\") + 1).join(\"\\r\\n\");\r\n                this.setState({timezone: result});\r\n            }\r\n        }.bind(this);\r\n        xhr.open(\"GET\", `https://cors-anywhere.herokuapp.com/http://tzurl.org/zoneinfo-outlook/${timezone}`);\r\n        xhr.send();\r\n        this.initAutocomplete();\r\n    }\r\n\r\n    submit = (e) => {\r\n        e.preventDefault();\r\n        let element = document.createElement('a');\r\n        let date = new Date();\r\n        let startDate = new Date(this.state.start);\r\n        let endDate = new Date(this.state.end);\r\n        let formError = false;\r\n        let errorMessages = [];\r\n\r\n        //Date checking\r\n        if (startDate > endDate) {\r\n            formError = true;\r\n            errorMessages.push(\"The event start date cannot be later than the event end date!\");\r\n        }\r\n\r\n        let currentDateTime = date.getFullYear() + '' +\r\n            +'' + (date.getMonth() + 1) + '' + (\"0\" + date.getDate()).slice(-2) + 'T' +\r\n            (\"0\" + date.getHours()).slice(-2) + '' + (\"0\" + date.getMinutes()).slice(-2) + '' +\r\n            (\"0\" + date.getSeconds()).slice(-2);\r\n        let recurrence = '';\r\n        let classification = '';\r\n        let priority = '';\r\n        let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n        let RSVP = '';\r\n        let resource = 'RESOURCE:';\r\n        let dateExceptions = \"\";\r\n\r\n        if (this.state.repeat !== 'No Repeat') {\r\n            recurrence += 'RRULE:FREQ=' + this.state.repeat + '\\r\\n';\r\n        }\r\n\r\n        if (this.state.arrMonths.length !== 0) {\r\n            recurrence += 'EXRULE:FREQ=YEARLY;BYMONTH=' + this.state.arrMonths.join(\",\") + '\\r\\n';\r\n        }\r\n\r\n        if (this.state.class !== '') {\r\n            classification += 'CLASS:' + this.state.class + '\\r\\n';\r\n        }\r\n\r\n        if (this.state.priority !== '') {\r\n            priority += 'PRIORITY:' + this.state.priority + '\\r\\n';\r\n        }\r\n\r\n        if (this.state.RSVP === true) {\r\n            this.state.arrRSVP.forEach(\r\n                (value) => RSVP += 'ATTENDEE;CUTYPE=INDIVIDUAL;ROLE=REQ-PARTICIPANT;PARTSTAT=NEEDS-ACTION;\\r\\n RSVP=TRUE:MAILTO:' + value + '\\r\\n'\r\n            )\r\n        }\r\n\r\n        if (this.state.resources.length !== 0) {\r\n            this.state.resources.forEach(\r\n                (value) => (resource.substring(resource.indexOf('\\n')).length + value.length > 28) ? resource += `\\r\\n ${value},` : resource += `${value},`\r\n            );\r\n            resource = resource.substring(0, resource.length - 1);\r\n            resource += '\\r\\n';\r\n        }\r\n\r\n        if (this.state.arrDate.length !== 0) {\r\n            dateExceptions = 'EXDATE:' + this.state.arrDate.join(\",\").split(\"-\").join(\"\") + '\\r\\n';\r\n        }\r\n\r\n\r\n        element.setAttribute('href', 'data:text/calendar;charset=utf-8,' +\r\n            //Starting Calendar\r\n            'BEGIN:VCALENDAR\\r\\n' +\r\n            //Calendar Version\r\n            'VERSION:2.0\\r\\n' +\r\n            'PRODID:-//Team-emm-too//Kalendae//EN\\r\\n' +\r\n            //Calendar Type\r\n            'CALSCALE:GREGORIAN\\r\\n' +\r\n            'METHOD:PUBLISH\\r\\n' +\r\n            //Timezone info\r\n            this.state.timezone + \"\\r\\n\" +\r\n            //Starting Event\r\n            'BEGIN:VEVENT\\r\\n' +\r\n            \"UID:\" + currentDateTime + \"-kalendae@ics414.com\\r\\n\" +\r\n            'SEQUENCE:0\\r\\n' +\r\n            // Time event was created\r\n            'DTSTAMP;TZID=' + timezone + \":\" + currentDateTime + '\\r\\n' +\r\n            //Start time of event\r\n            'DTSTART;TZID=' + timezone + \":\" + this.state.start.split('-').join('').replace(':', '') + '00\\r\\n' +\r\n            //End time of event\r\n            'DTEND;TZID=' + timezone + \":\" + this.state.end.split('-').join('').replace(':', '') + '00\\r\\n' +\r\n            //Event Name\r\n            'SUMMARY:' + this.state.eventName + '\\r\\n' +\r\n            //Event Description\r\n            'DESCRIPTION:' + this.state.eventDescription + '\\r\\n' +\r\n            //Event Location\r\n            'LOCATION:' + this.state.eventLocation + '\\r\\n' +\r\n            //GEO LOCATION\r\n            'GEO:' + this.state.GEO + '\\r\\n' +\r\n            //Recurrence\r\n            recurrence +\r\n            //Date Exceptions\r\n            dateExceptions +\r\n            //Classification\r\n            classification +\r\n            //Priority\r\n            priority +\r\n            //Organizer(Sender)\r\n            \"ORGANIZER:MAILTO:\" + this.state.sender + '\\r\\n' +\r\n            //Attendee\r\n            RSVP +\r\n            //Resources\r\n            resource +\r\n            //Ending Event\r\n            'END:VEVENT\\r\\n' +\r\n            //Ending Calendar\r\n            'END:VCALENDAR\\r\\n');\r\n\r\n        if (!formError) {\r\n            element.setAttribute('download', this.state.eventName + \".ics\");\r\n\r\n            element.style.display = 'none';\r\n\r\n            document.body.appendChild(element);\r\n\r\n            element.click();\r\n\r\n            document.body.removeChild(element);\r\n\r\n            this.setState({\r\n                eventName: \"\",\r\n                eventLocation: \"\",\r\n                start: \"\",\r\n                end: \"\",\r\n                eventDescription: \"\",\r\n                repeat: \"No Repeat\",\r\n                class: \"PUBLIC\",\r\n                priority: \"9\",\r\n                error: [],\r\n                RSVP: false,\r\n                toRSVP: \"\",\r\n                arrRSVP: [],\r\n                GEO: \"\",\r\n                sender: \"\",\r\n                resources: [],\r\n                resource: '',\r\n                emailError: false,\r\n                dateException: \"\",\r\n                arrDate: [],\r\n                arrMonths: [],\r\n            });\r\n        } else {\r\n            console.log(\"error\");\r\n            this.setState({error: errorMessages});\r\n        }\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    handlePlaceChange = (place) => {\r\n        this.setState({\r\n            eventLocation: place.formatted_address,\r\n            GEO: `${place.geometry.location.lat()};${place.geometry.location.lng()}`\r\n        });\r\n    }\r\n\r\n    showRSVP = () => {\r\n        this.setState({RSVP: !this.state.RSVP});\r\n    }\r\n\r\n    handleRSVP = () => {\r\n        //email checking\r\n        let email = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(.\\w{2,3})+$/.test(this.state.toRSVP);\r\n\r\n        if (email && this.state.arrRSVP.indexOf(this.state.toRSVP) === -1) {\r\n            let arr = this.state.arrRSVP;\r\n            arr.push(this.state.toRSVP);\r\n            this.setState({arrRSVP: arr, toRSVP: '', emailError: false});\r\n        } else if (email === false) {\r\n            this.setState({emailError: true});\r\n        } else {\r\n            this.setState({toRSVP: '', emailError: false});\r\n        }\r\n\r\n    }\r\n\r\n    handleResources = () => {\r\n        if (this.state.resources.indexOf(this.state.resource) === -1 && this.state.resource !== \"\") {\r\n            let arr = this.state.resources;\r\n            arr.push(this.state.resource);\r\n            this.setState({resources: arr, resource: ''});\r\n        } else {\r\n            this.setState({resource: ''});\r\n        }\r\n\r\n        console.log(this.state.resources);\r\n    }\r\n\r\n    handleDateExceptions = () => {\r\n        if (this.state.arrDate.indexOf(this.state.dateException) === -1 && this.state.dateException !== \"\") {\r\n            let arr = this.state.arrDate;\r\n            arr.push(this.state.dateException);\r\n            this.setState({arrDate: arr, dateException: ''});\r\n        } else {\r\n            this.setState({dateException: ''});\r\n        }\r\n    }\r\n\r\n    handleRemove = (value) => {\r\n        let index = this.state.arrRSVP.indexOf(value);\r\n        let arr = this.state.arrRSVP.slice();\r\n        arr.splice(index, 1);\r\n        this.setState({arrRSVP: arr});\r\n        console.log(index, arr);\r\n    }\r\n\r\n    handleResourceRemove = (value) => {\r\n        let index = this.state.resources.indexOf(value);\r\n        let arr = this.state.resources.slice();\r\n        arr.splice(index, 1);\r\n        this.setState({resources: arr});\r\n    }\r\n\r\n    handleDateRemove = (value) => {\r\n        let index = this.state.arrDate.indexOf(value);\r\n        let arr = this.state.arrDate.slice();\r\n        arr.splice(index, 1);\r\n        this.setState({arrDate: arr});\r\n    }\r\n\r\n    initAutocomplete = () => {\r\n\r\n        // Create the search box and link it to the UI element.\r\n        const input = document.getElementById(\"pac-input\");\r\n        const searchBox = new window.google.maps.places.Autocomplete(input);\r\n\r\n        // Listen for the event fired when the user selects a prediction and retrieve\r\n        // more details for that place.\r\n        searchBox.addListener(\"place_changed\", () => {\r\n            const place = searchBox.getPlace();\r\n            this.handlePlaceChange(place)\r\n        });\r\n    }\r\n\r\n    handleEnter = (event) => {\r\n        if (event.which === 13) {\r\n            event.preventDefault();\r\n            if (event.target.name === 'resource') {\r\n                this.handleResources();\r\n            } else if (event.target.name === 'toRSVP') {\r\n                this.handleRSVP();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Menu size=\"huge\" inverted>\r\n                    <Grid style={{margin: \"3px 0px 2px 0px\"}}>\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n                                <Header as=\"h1\" textAlign=\"center\" style={{color: \"white\"}}><Icon\r\n                                    name=\"calendar alternate\" color=\"blue\"/> Kalendae</Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </Menu>\r\n\r\n                <Grid container stretched>\r\n                    <Grid.Column>\r\n                        <Header as=\"h2\" textAlign=\"center\" className='white'>Add an Event!</Header>\r\n                        <Segment>\r\n                            <Form style={{padding: \"5px 30px 10px 30px\"}} onSubmit={this.submit} error>\r\n                                <Form.Input style={{paddingBottom: \"30px\"}} required fluid name='eventName'\r\n                                            value={this.state.eventName} label='Event Name'\r\n                                            placeholder='Ex. New Year Party' onChange={this.handleChange}/>\r\n\r\n                                <Divider style={{backgroundColor: \"paleturquoise\"}}/>\r\n\r\n                                <Form.Group widths='equal' style={{paddingBottom: \"30px\"}}>\r\n                                    <Form.Input id=\"pac-input\" required name='eventLocation'\r\n                                                value={this.state.eventLocation}\r\n                                                label='Location'\r\n                                                placeholder='Ex. 1234 Foo St. Honolulu, HI 96821'\r\n                                                onChange={this.handleChange}\r\n                                    />\r\n                                    <Form.Input required name='start' value={this.state.start} label='Start Date'\r\n                                                type='datetime-local'\r\n                                                onChange={this.handleChange}/>\r\n                                    <Form.Input required name='end' value={this.state.end} label='End Date'\r\n                                                type='datetime-local'\r\n                                                onChange={this.handleChange}/>\r\n                                </Form.Group>\r\n\r\n                                <Divider style={{backgroundColor: \"paleturquoise\"}}/>\r\n\r\n                                <Form.Group style={{paddingBottom: \"30px\"}}>\r\n                                    <Form.Select name='repeat' value={this.state.repeat} label='Repeat'\r\n                                                 options={this.state.repeatOptions}\r\n                                                 onChange={\r\n                                                     (e, {value}) => {\r\n                                                         this.setState({repeat: value});\r\n                                                     }\r\n                                                 }\r\n                                    />\r\n\r\n                                    {this.state.repeat !== 'No Repeat' ?\r\n                                        <Form.Select multiple name='monthException'\r\n                                                     label='Month Exception'\r\n                                                     options={this.state.months}\r\n                                                     onChange={\r\n                                                         (e, {value}) => {\r\n\r\n                                                             this.setState({arrMonths: value});\r\n                                                         }\r\n                                                     }\r\n                                        /> : \"\"}\r\n\r\n                                </Form.Group>\r\n                                {this.state.repeat !== 'No Repeat' ?\r\n                                <Form.Group style={{paddingBottom: \"30px\"}}>\r\n                                    <Form.Input\r\n                                        action={\r\n                                            <Button type=\"button\" onClick={this.handleDateExceptions} icon>\r\n                                                <Icon color=\"green\" name=\"add\"/>\r\n                                            </Button>}\r\n                                        type='date' value={this.state.dateException} name='dateException'\r\n                                        label='Date Exceptions'\r\n                                        onChange={this.handleChange}\r\n                                        onKeyDown={this.handleEnter}/>\r\n                                    <Grid container>\r\n                                        <Grid.Row centered verticalAlign=\"middle\" style={{padding: \"0 0 0 0\"}}>\r\n                                            <Grid.Column>\r\n                                                <Header as='h5' textAlign=\"center\" style={{height: \"15px\"}}>Date\r\n                                                    Exceptions\r\n                                                    List</Header>\r\n                                            </Grid.Column>\r\n                                        </Grid.Row>\r\n                                        <Grid.Row id=\"date-exception\" stretched>\r\n                                            <List ordered horizontal>\r\n                                                {this.state.arrDate.map((value) =>\r\n                                                    <List.Item key={value}>\r\n                                                        {value}\r\n                                                        <Button style={{backgroundColor: 'transparent'}} type='button'\r\n                                                                size='tiny'\r\n                                                                value={value}\r\n                                                                onClick={() => this.handleDateRemove(value)}\r\n                                                                icon\r\n                                                                circular>\r\n                                                            <Icon color='red' name='close'/>\r\n                                                        </Button>\r\n                                                    </List.Item>)}\r\n                                            </List>\r\n                                        </Grid.Row>\r\n                                    </Grid>\r\n                                </Form.Group> : \"\" }\r\n\r\n                                <Divider style={{backgroundColor: \"paleturquoise\"}}/>\r\n                                <Form.Group widths='equal' style={{paddingBottom: \"30px\"}}>\r\n                                    <Form.Select name='classification' value={this.state.class} label='Classification'\r\n                                                 options={this.state.classOptions}\r\n                                                 onChange={\r\n                                                     (e, {value}) => {\r\n                                                         this.setState({class: value});\r\n                                                     }\r\n                                                 }\r\n                                    />\r\n                                    <Form.Select name='priority' value={this.state.priority} label='Priority'\r\n                                                 options={this.state.priorityOptions}\r\n                                                 onChange={\r\n                                                     (e, {value}) => {\r\n                                                         this.setState({priority: value});\r\n                                                     }\r\n                                                 }\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                <Divider style={{backgroundColor: \"paleturquoise\"}}/>\r\n\r\n                                <Form.Group style={{paddingBottom: \"30px\"}}>\r\n                                    <Form.Input\r\n                                        action={\r\n                                            <Button type=\"button\" onClick={this.handleResources} icon>\r\n                                                <Icon color=\"green\" name=\"add\"/>\r\n                                            </Button>}\r\n                                        type='text' value={this.state.resource} name='resource' label='Resources'\r\n                                        placeholder='Ex. Projector, Camera, etc.' onChange={this.handleChange}\r\n                                        onKeyDown={this.handleEnter}/>\r\n                                    <Grid container>\r\n                                        <Grid.Row centered verticalAlign=\"middle\" style={{padding: \"0 0 0 0\"}}>\r\n                                            <Grid.Column>\r\n                                                <Header as='h5' textAlign=\"center\" style={{height: \"15px\"}}>Resource\r\n                                                    List</Header>\r\n                                            </Grid.Column>\r\n                                        </Grid.Row>\r\n                                        <Grid.Row id=\"resource\" stretched>\r\n                                            <List ordered horizontal>\r\n                                                {this.state.resources.map((value) =>\r\n                                                    <List.Item key={value}>\r\n                                                        {value}\r\n                                                        <Button style={{backgroundColor: 'transparent'}} type='button'\r\n                                                                size='tiny'\r\n                                                                value={value}\r\n                                                                onClick={() => this.handleResourceRemove(value)}\r\n                                                                icon\r\n                                                                circular>\r\n                                                            <Icon color='red' name='close'/>\r\n                                                        </Button>\r\n                                                    </List.Item>)}\r\n                                            </List>\r\n                                        </Grid.Row>\r\n                                    </Grid>\r\n                                </Form.Group>\r\n\r\n                                <Divider style={{backgroundColor: \"paleturquoise\"}}/>\r\n\r\n                                <Form.Group>\r\n                                    <Form.Radio name='RSVP' label='RSVP' toggle onChange={this.showRSVP}/>\r\n                                </Form.Group>\r\n                                <Form.Group style={{paddingBottom: \"40px\"}}>\r\n                                    {this.state.RSVP === true && this.state.emailError === false ?\r\n                                        <Form.Input id=\"toRSVP\" action={\r\n                                            <Button type=\"button\" onClick={this.handleRSVP} icon>\r\n                                                <Icon color=\"green\" name=\"add\"/>\r\n                                            </Button>}\r\n                                                    type='email' value={this.state.toRSVP} multiple name='toRSVP'\r\n                                                    label='RSVP To'\r\n                                                    placeholder='Ex. attendee@email.com' onChange={this.handleChange}\r\n                                                    onKeyDown={this.handleEnter}/> :\r\n                                        (this.state.emailError && this.state.RSVP) ?\r\n                                            <Form.Input id=\"toRSVP\"\r\n                                                        error={{\r\n                                                            content: 'Please enter a valid email',\r\n                                                            pointing: 'below'\r\n                                                        }}\r\n                                                        action={\r\n                                                            <Button type=\"button\" onClick={this.handleRSVP} icon>\r\n                                                                <Icon color=\"green\" name=\"add\"/>\r\n                                                            </Button>}\r\n                                                        type='email' value={this.state.toRSVP} multiple name='toRSVP'\r\n                                                        label='RSVP To'\r\n                                                        placeholder='Ex. attendee@email.com'\r\n                                                        onChange={this.handleChange}\r\n                                                        onKeyDown={this.handleEnter}/> : \"\"}\r\n\r\n                                    {this.state.RSVP === true ?\r\n                                        <Form.Input required type='email' value={this.state.sender} name='sender'\r\n                                                    label='Organizer Email'\r\n                                                    placeholder='Ex. organizer@email.com'\r\n                                                    onChange={this.handleChange}/> : \"\"}\r\n                                    {this.state.RSVP === true ?\r\n                                        (\r\n                                            <Grid container>\r\n                                                <Grid.Row centered verticalAlign=\"middle\" style={{padding: \"0 0 0 0\"}}>\r\n                                                    <Grid.Column>\r\n                                                        <Header as='h5' textAlign=\"center\" style={{height: \"15px\"}}>Attendee\r\n                                                            List</Header>\r\n                                                    </Grid.Column>\r\n                                                </Grid.Row>\r\n                                                <Grid.Row id='attendee' stretched>\r\n                                                    <List ordered horizontal>\r\n                                                        {this.state.arrRSVP.map((value) =>\r\n                                                            <List.Item key={value}>\r\n                                                                {value}\r\n                                                                <Button style={{backgroundColor: 'transparent'}}\r\n                                                                        type='button' size='tiny'\r\n                                                                        value={value}\r\n                                                                        onClick={() => this.handleRemove(value)}\r\n                                                                        icon circular>\r\n                                                                    <Icon color='red' name='close'/>\r\n                                                                </Button>\r\n                                                            </List.Item>)}\r\n                                                    </List>\r\n                                                </Grid.Row>\r\n                                            </Grid>\r\n                                        ) : \"\"}\r\n                                </Form.Group>\r\n                                <Divider style={{backgroundColor: \"paleturquoise\"}}/>\r\n                                <Form.Input name='eventDescription' value={this.state.eventDescription}\r\n                                            control={TextArea}\r\n                                            label='Event Description' placeholder='Ex. New Year Party'\r\n                                            onChange={this.handleChange}/>\r\n                                <Form.Button color=\"green\" icon labelPosition='right'>Submit/Download<Icon\r\n                                    name=\"download\"/></Form.Button>\r\n                                {this.state.error.length !== 0 ? <Message\r\n                                    error\r\n                                    header='Action Forbidden'\r\n                                    list={this.state.error}\r\n                                /> : \"\"}\r\n                            </Form>\r\n                        </Segment>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}