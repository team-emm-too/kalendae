{"version":3,"sources":["App.js","index.js"],"names":["App","state","eventName","eventLocation","start","end","eventDescription","repeat","class","priority","error","timezone","RSVP","toRSVP","arrRSVP","GEO","sender","resources","resource","emailError","repeatOptions","key","value","text","classOptions","priorityOptions","submit","e","preventDefault","element","document","createElement","date","Date","formError","errorMessages","push","currentDateTime","getFullYear","getMonth","getDate","slice","getHours","getMinutes","getSeconds","recurrence","classification","Intl","DateTimeFormat","resolvedOptions","timeZone","forEach","length","substring","indexOf","setAttribute","split","join","replace","console","log","setState","style","display","body","appendChild","click","removeChild","handleChange","target","name","handlePlaceChange","place","formatted_address","geometry","location","lat","lng","showRSVP","handleRSVP","email","test","arr","handleResources","handleRemove","index","splice","handleResourceRemove","initAutocomplete","input","getElementById","searchBox","window","google","maps","places","Autocomplete","addListener","getPlace","handleEnter","event","which","xhr","XMLHttpRequest","responseType","onreadystatechange","readyState","status","response","result","this","bind","open","send","className","Menu","size","inverted","Grid","margin","Row","Column","Header","as","textAlign","color","container","stretched","Form","onSubmit","Input","paddingBottom","required","fluid","label","placeholder","onChange","Group","widths","id","type","Select","options","action","Button","onClick","icon","Icon","onKeyDown","centered","verticalAlign","padding","height","List","ordered","horizontal","map","Item","backgroundColor","circular","Radio","toggle","multiple","content","pointing","control","TextArea","Message","header","list","React","Component","ReactDOM","render"],"mappings":"4XAqceA,E,4MA/bXC,MAAQ,CACJC,UAAW,GACXC,cAAe,GACfC,MAAO,GACPC,IAAK,GACLC,iBAAkB,GAClBC,OAAQ,YACRC,MAAO,SACPC,SAAU,IACVC,MAAO,GACPC,SAAU,GACVC,MAAM,EACNC,OAAQ,GACRC,QAAS,GACTC,IAAK,GACLC,OAAQ,GACRC,UAAW,GACXC,SAAU,GACVC,YAAY,EACZC,cAAe,CACX,CAACC,IAAK,IAAKC,MAAO,YAAaC,KAAM,aACrC,CAACF,IAAK,IAAKC,MAAO,QAASC,KAAM,SACjC,CAACF,IAAK,IAAKC,MAAO,SAAUC,KAAM,UAClC,CAACF,IAAK,IAAKC,MAAO,UAAWC,KAAM,WACnC,CAACF,IAAK,IAAKC,MAAO,SAAUC,KAAM,WAEtCC,aAAc,CACV,CAACH,IAAK,IAAKC,MAAO,SAAUC,KAAM,UAClC,CAACF,IAAK,IAAKC,MAAO,UAAWC,KAAM,WACnC,CAACF,IAAK,IAAKC,MAAO,eAAgBC,KAAM,iBAE5CE,gBAAiB,CACb,CAACJ,IAAK,IAAKC,MAAO,IAAKC,KAAM,OAC7B,CAACF,IAAK,IAAKC,MAAO,IAAKC,KAAM,UAC7B,CAACF,IAAK,IAAKC,MAAO,IAAKC,KAAM,U,EAoBrCG,OAAS,SAACC,GACNA,EAAEC,iBACF,IAAIC,EAAUC,SAASC,cAAc,KACjCC,EAAO,IAAIC,KAGXC,GAAY,EACZC,EAAgB,GAHJ,IAAIF,KAAK,EAAKhC,MAAMG,OACtB,IAAI6B,KAAK,EAAKhC,MAAMI,OAM9B6B,GAAY,EACZC,EAAcC,KAAK,kEAGvB,IAAIC,EAAkBL,EAAKM,cAALN,KACXA,EAAKO,WAAa,IAAW,IAAMP,EAAKQ,WAAWC,OAAO,GAAK,KACrE,IAAMT,EAAKU,YAAYD,OAAO,IAAW,IAAMT,EAAKW,cAAcF,OAAO,IACzE,IAAMT,EAAKY,cAAcH,OAAO,GACjCI,EAAa,GACbC,EAAiB,GACjBrC,EAAW,GACXE,EAAWoC,KAAKC,iBAAiBC,kBAAkBC,SACnDtC,EAAO,GACPM,EAAW,YAEW,cAAtB,EAAKjB,MAAMM,SACXsC,GAAc,cAAgB,EAAK5C,MAAMM,OAAS,QAG7B,KAArB,EAAKN,MAAMO,QACXsC,GAAkB,SAAW,EAAK7C,MAAMO,MAAQ,QAGxB,KAAxB,EAAKP,MAAMQ,WACXA,GAAY,YAAc,EAAKR,MAAMQ,SAAW,SAG5B,IAApB,EAAKR,MAAMW,MACX,EAAKX,MAAMa,QAAQqC,SACf,SAAC7B,GAAD,OAAWV,GAAQ,+FAAiGU,EAAQ,UAIhG,IAAhC,EAAKrB,MAAMgB,UAAUmC,SACrB,EAAKnD,MAAMgB,UAAUkC,SACjB,SAAC7B,GAAD,OAAYJ,EAASmC,UAAUnC,EAASoC,QAAQ,OAAOF,OAAS9B,EAAM8B,OAAS,GAAMlC,GAAQ,eAAYI,EAAZ,KAAuBJ,GAAQ,UAAOI,EAAP,QAEhIJ,EAAWA,EAASmC,UAAU,EAAGnC,EAASkC,OAAS,GACnDlC,GAAY,QAIhBW,EAAQ0B,aAAa,OAAQ,sJAUzB,EAAKtD,MAAMU,SAVc,2BAahB0B,EAbgB,sDAgBP1B,EAAW,IAAM0B,EAhBV,oBAkBP1B,EAAW,IAAM,EAAKV,MAAMG,MAAMoD,MAAM,KAAKC,KAAK,IAAIC,QAAQ,IAAK,IAlB5D,oBAoBT/C,EAAW,IAAM,EAAKV,MAAMI,IAAImD,MAAM,KAAKC,KAAK,IAAIC,QAAQ,IAAK,IApBxD,iBAsBZ,EAAKzD,MAAMC,UAtBC,mBAwBR,EAAKD,MAAMK,iBAxBH,gBA0BX,EAAKL,MAAME,cA1BA,WA4BhB,EAAKF,MAAMc,IAAM,OAE1B8B,EAEAC,EAEArC,EAEA,oBAAsB,EAAKR,MAAMe,OAAS,OAE1CJ,EAEAM,EAxCyB,mCA8CxBgB,GA+BDyB,QAAQC,IAAI,SACZ,EAAKC,SAAS,CAACnD,MAAOyB,MA/BtBN,EAAQ0B,aAAa,WAAY,EAAKtD,MAAMC,UAAY,QAExD2B,EAAQiC,MAAMC,QAAU,OAExBjC,SAASkC,KAAKC,YAAYpC,GAE1BA,EAAQqC,QAERpC,SAASkC,KAAKG,YAAYtC,GAE1B,EAAKgC,SAAS,CACV3D,UAAW,GACXC,cAAe,GACfC,MAAO,GACPC,IAAK,GACLC,iBAAkB,GAClBC,OAAQ,YACRC,MAAO,SACPC,SAAU,IACVC,MAAO,GACPE,MAAM,EACNC,OAAQ,GACRC,QAAS,GACTC,IAAK,GACLC,OAAQ,GACRC,UAAW,GACXC,SAAU,GACVC,YAAY,M,EAQxBiD,aAAe,SAACzC,GACZ,EAAKkC,SAAL,eAAgBlC,EAAE0C,OAAOC,KAAO3C,EAAE0C,OAAO/C,S,EAG7CiD,kBAAoB,SAACC,GACjB,EAAKX,SAAS,CACV1D,cAAeqE,EAAMC,kBACrB1D,IAAI,GAAD,OAAKyD,EAAME,SAASC,SAASC,MAA7B,YAAsCJ,EAAME,SAASC,SAASE,U,EAIzEC,SAAW,WACP,EAAKjB,SAAS,CAACjD,MAAO,EAAKX,MAAMW,Q,EAGrCmE,WAAa,WAET,IAAIC,EAAQ,6CAA6CC,KAAK,EAAKhF,MAAMY,QAEzE,GAAImE,IAA4D,IAAnD,EAAK/E,MAAMa,QAAQwC,QAAQ,EAAKrD,MAAMY,QAAgB,CAC/D,IAAIqE,EAAM,EAAKjF,MAAMa,QACrBoE,EAAI9C,KAAK,EAAKnC,MAAMY,QACpB,EAAKgD,SAAS,CAAC/C,QAASoE,EAAKrE,OAAQ,GAAIM,YAAY,SACpC,IAAV6D,EACP,EAAKnB,SAAS,CAAC1C,YAAY,IAE3B,EAAK0C,SAAS,CAAChD,OAAQ,GAAIM,YAAY,K,EAK/CgE,gBAAkB,WACd,IAA2D,IAAvD,EAAKlF,MAAMgB,UAAUqC,QAAQ,EAAKrD,MAAMiB,UAAkB,CAC1D,IAAIgE,EAAM,EAAKjF,MAAMgB,UACrBiE,EAAI9C,KAAK,EAAKnC,MAAMiB,UACpB,EAAK2C,SAAS,CAAC5C,UAAWiE,EAAKhE,SAAU,UAEzC,EAAK2C,SAAS,CAAC3C,SAAU,KAG7ByC,QAAQC,IAAI,EAAK3D,MAAMgB,Y,EAG3BmE,aAAe,SAAC9D,GACZ,IAAI+D,EAAQ,EAAKpF,MAAMa,QAAQwC,QAAQhC,GACnC4D,EAAM,EAAKjF,MAAMa,QAAQ2B,QAC7ByC,EAAII,OAAOD,EAAO,GAClB,EAAKxB,SAAS,CAAC/C,QAASoE,IACxBvB,QAAQC,IAAIyB,EAAOH,I,EAGvBK,qBAAuB,SAACjE,GACpB,IAAI+D,EAAQ,EAAKpF,MAAMgB,UAAUqC,QAAQhC,GACrC4D,EAAM,EAAKjF,MAAMgB,UAAUwB,QAC/ByC,EAAII,OAAOD,EAAO,GAClB,EAAKxB,SAAS,CAAC5C,UAAWiE,IAC1BvB,QAAQC,IAAIyB,EAAOH,EAAK5D,I,EAG5BkE,iBAAmB,WAGf,IAAMC,EAAQ3D,SAAS4D,eAAe,aAChCC,EAAY,IAAIC,OAAOC,OAAOC,KAAKC,OAAOC,aAAaP,GAI7DE,EAAUM,YAAY,iBAAiB,WACnC,IAAMzB,EAAQmB,EAAUO,WACxB,EAAK3B,kBAAkBC,O,EAI/B2B,YAAc,SAACC,GACS,KAAhBA,EAAMC,QACND,EAAMxE,iBACoB,aAAtBwE,EAAM/B,OAAOC,KACb,EAAKa,kBACwB,WAAtBiB,EAAM/B,OAAOC,MACpB,EAAKS,e,kEArOb,IAAIpE,EAAWoC,KAAKC,iBAAiBC,kBAAkBC,SACnDoD,EAAM,IAAIC,eACdD,EAAIE,aAAe,OACnBF,EAAIG,mBAAqB,WACrB,GAAuB,IAAnBH,EAAII,YAAmC,MAAfJ,EAAIK,OAAgB,CAC5C,IAAIzB,EAAMoB,EAAIM,SAASpD,MAAM,QACzBqD,EAAS3B,EAAIzC,MAAMyC,EAAI5B,QAAQ,mBAAoB4B,EAAI5B,QAAQ,iBAAmB,GAAGG,KAAK,QAC9FqD,KAAKjD,SAAS,CAAClD,SAAUkG,MAE/BE,KAAKD,MACPR,EAAIU,KAAK,MAAT,gFAAyFrG,IACzF2F,EAAIW,OACJH,KAAKtB,qB,+BA8NC,IAAD,OACL,OACI,yBAAK0B,UAAU,OACX,kBAACC,EAAA,EAAD,CAAMC,KAAK,OAAOC,UAAQ,GACtB,kBAACC,EAAA,EAAD,CAAMxD,MAAO,CAACyD,OAAQ,oBAClB,kBAACD,EAAA,EAAKE,IAAN,KACI,kBAACF,EAAA,EAAKG,OAAN,KACI,kBAACC,EAAA,EAAD,CAAQC,GAAG,KAAKC,UAAU,SAAS9D,MAAO,CAAC+D,MAAO,UAAlD,gBAMhB,kBAACP,EAAA,EAAD,CAAMQ,WAAS,EAACC,WAAS,GACrB,kBAACT,EAAA,EAAKG,OAAN,KACI,kBAACC,EAAA,EAAD,CAAQC,GAAG,KAAKC,UAAU,SAASV,UAAU,SAA7C,iBACA,kBAACc,EAAA,EAAD,CAAMC,SAAUnB,KAAKpF,OAAQhB,OAAK,GAC9B,kBAACsH,EAAA,EAAKE,MAAN,CAAYpE,MAAO,CAACqE,cAAe,QAASC,UAAQ,EAACC,OAAK,EAAC/D,KAAK,YACpDhD,MAAOwF,KAAK7G,MAAMC,UAAWoI,MAAM,aACnCC,YAAY,qBAAqBC,SAAU1B,KAAK1C,eAE5D,kBAAC4D,EAAA,EAAKS,MAAN,CAAYC,OAAO,QAAQ5E,MAAO,CAACqE,cAAe,SAC9C,kBAACH,EAAA,EAAKE,MAAN,CAAYS,GAAG,YAAYP,UAAQ,EAAC9D,KAAK,gBAC7BhD,MAAOwF,KAAK7G,MAAME,cAClBmI,MAAM,WACNC,YAAY,sCACZC,SAAU1B,KAAK1C,eAE3B,kBAAC4D,EAAA,EAAKE,MAAN,CAAYE,UAAQ,EAAC9D,KAAK,QAAQhD,MAAOwF,KAAK7G,MAAMG,MAAOkI,MAAM,aACrDM,KAAK,iBACLJ,SAAU1B,KAAK1C,eAC3B,kBAAC4D,EAAA,EAAKE,MAAN,CAAYE,UAAQ,EAAC9D,KAAK,MAAMhD,MAAOwF,KAAK7G,MAAMI,IAAKiI,MAAM,WACjDM,KAAK,iBACLJ,SAAU1B,KAAK1C,gBAG/B,kBAAC4D,EAAA,EAAKS,MAAN,CAAYC,OAAO,QAAQ5E,MAAO,CAACqE,cAAe,SAC9C,kBAACH,EAAA,EAAKa,OAAN,CAAavE,KAAK,SAAShD,MAAOwF,KAAK7G,MAAMM,OAAQ+H,MAAM,SAC9CQ,QAAShC,KAAK7G,MAAMmB,cACpBoH,SACI,SAAC7G,EAAD,GAAiB,IAAZL,EAAW,EAAXA,MACD,EAAKuC,SAAS,CAACtD,OAAQe,OAI5C,kBAAC0G,EAAA,EAAKa,OAAN,CAAavE,KAAK,iBAAiBhD,MAAOwF,KAAK7G,MAAMO,MAAO8H,MAAM,iBACrDQ,QAAShC,KAAK7G,MAAMuB,aACpBgH,SACI,SAAC7G,EAAD,GAAiB,IAAZL,EAAW,EAAXA,MACD,EAAKuC,SAAS,CAACrD,MAAOc,OAI3C,kBAAC0G,EAAA,EAAKa,OAAN,CAAavE,KAAK,WAAWhD,MAAOwF,KAAK7G,MAAMQ,SAAU6H,MAAM,WAClDQ,QAAShC,KAAK7G,MAAMwB,gBACpB+G,SACI,SAAC7G,EAAD,GAAiB,IAAZL,EAAW,EAAXA,MACD,EAAKuC,SAAS,CAACpD,SAAUa,QAMlD,kBAAC0G,EAAA,EAAKS,MAAN,CAAY3E,MAAO,CAACqE,cAAe,SAC/B,kBAACH,EAAA,EAAKE,MAAN,CACIa,OACI,kBAACC,EAAA,EAAD,CAAQJ,KAAK,SAASK,QAASnC,KAAK3B,gBAAiB+D,MAAI,GACrD,kBAACC,EAAA,EAAD,CAAM7E,KAAK,SAEnBsE,KAAK,OAAOtH,MAAOwF,KAAK7G,MAAMiB,SAAUoD,KAAK,WAAWgE,MAAM,YAC9DC,YAAY,8BAA8BC,SAAU1B,KAAK1C,aACzDgF,UAAWtC,KAAKX,cACpB,kBAACmB,EAAA,EAAD,CAAMQ,WAAS,GACX,kBAACR,EAAA,EAAKE,IAAN,CAAU6B,UAAQ,EAACC,cAAc,SAASxF,MAAO,CAACyF,QAAS,YACvD,kBAACjC,EAAA,EAAKG,OAAN,KACI,kBAACC,EAAA,EAAD,CAAQC,GAAG,KAAKC,UAAU,SAAS9D,MAAO,CAAC0F,OAAQ,SAAnD,mBAIR,kBAAClC,EAAA,EAAKE,IAAN,CAAUmB,GAAG,WAAWZ,WAAS,GAC7B,kBAAC0B,EAAA,EAAD,CAAMC,SAAO,EAACC,YAAU,GACnB7C,KAAK7G,MAAMgB,UAAU2I,KAAI,SAACtI,GAAD,OACtB,kBAACmI,EAAA,EAAKI,KAAN,CAAWxI,IAAKC,GACXA,EACD,kBAAC0H,EAAA,EAAD,CAAQlF,MAAO,CAACgG,gBAAiB,eAAgBlB,KAAK,SAC9CxB,KAAK,OACL9F,MAAOA,EACP2H,QAAS,kBAAM,EAAK1D,qBAAqBjE,IACzC4H,MAAI,EACJa,UAAQ,GACZ,kBAACZ,EAAA,EAAD,CAAMtB,MAAM,MAAMvD,KAAK,mBAOnD,kBAAC0D,EAAA,EAAKS,MAAN,KACI,kBAACT,EAAA,EAAKgC,MAAN,CAAY1F,KAAK,OAAOgE,MAAM,OAAO2B,QAAM,EAACzB,SAAU1B,KAAKhC,YAE/D,kBAACkD,EAAA,EAAKS,MAAN,CAAY3E,MAAO,CAACqE,cAAe,UACV,IAApBrB,KAAK7G,MAAMW,OAA2C,IAA1BkG,KAAK7G,MAAMkB,WACpC,kBAAC6G,EAAA,EAAKE,MAAN,CAAYS,GAAG,SAASI,OACpB,kBAACC,EAAA,EAAD,CAAQJ,KAAK,SAASK,QAASnC,KAAK/B,WAAYmE,MAAI,GAChD,kBAACC,EAAA,EAAD,CAAM7E,KAAK,SAEPsE,KAAK,QAAQtH,MAAOwF,KAAK7G,MAAMY,OAAQqJ,UAAQ,EAAC5F,KAAK,SACrDgE,MAAM,UACNC,YAAY,yBAAyBC,SAAU1B,KAAK1C,aACpDgF,UAAWtC,KAAKX,cAC3BW,KAAK7G,MAAMkB,YAAc2F,KAAK7G,MAAMW,KACjC,kBAACoH,EAAA,EAAKE,MAAN,CAAYS,GAAG,SACHjI,MAAO,CAACyJ,QAAS,6BAA8BC,SAAU,SACzDrB,OACI,kBAACC,EAAA,EAAD,CAAQJ,KAAK,SAASK,QAASnC,KAAK/B,WAAYmE,MAAI,GAChD,kBAACC,EAAA,EAAD,CAAM7E,KAAK,SAEnBsE,KAAK,QAAQtH,MAAOwF,KAAK7G,MAAMY,OAAQqJ,UAAQ,EAAC5F,KAAK,SACrDgE,MAAM,UACNC,YAAY,yBAAyBC,SAAU1B,KAAK1C,aACpDgF,UAAWtC,KAAKX,cAAiB,IAEhC,IAApBW,KAAK7G,MAAMW,KACR,kBAACoH,EAAA,EAAKE,MAAN,CAAYE,UAAQ,EAACQ,KAAK,QAAQtH,MAAOwF,KAAK7G,MAAMe,OAAQsD,KAAK,SACrDgE,MAAM,kBACNC,YAAY,0BACZC,SAAU1B,KAAK1C,eAAkB,IAC5B,IAApB0C,KAAK7G,MAAMW,KAEJ,kBAAC0G,EAAA,EAAD,CAAMQ,WAAS,GACX,kBAACR,EAAA,EAAKE,IAAN,CAAU6B,UAAQ,EAACC,cAAc,SAASxF,MAAO,CAACyF,QAAS,YACvD,kBAACjC,EAAA,EAAKG,OAAN,KACI,kBAACC,EAAA,EAAD,CAAQC,GAAG,KAAKC,UAAU,SAAS9D,MAAO,CAAC0F,OAAQ,SAAnD,mBAIR,kBAAClC,EAAA,EAAKE,IAAN,CAAUmB,GAAG,WAAWZ,WAAS,GAC7B,kBAAC0B,EAAA,EAAD,CAAMC,SAAO,EAACC,YAAU,GACnB7C,KAAK7G,MAAMa,QAAQ8I,KAAI,SAACtI,GAAD,OACpB,kBAACmI,EAAA,EAAKI,KAAN,CAAWxI,IAAKC,GACXA,EACD,kBAAC0H,EAAA,EAAD,CAAQlF,MAAO,CAACgG,gBAAiB,eACzBlB,KAAK,SAASxB,KAAK,OACnB9F,MAAOA,EACP2H,QAAS,kBAAM,EAAK7D,aAAa9D,IACjC4H,MAAI,EAACa,UAAQ,GACjB,kBAACZ,EAAA,EAAD,CAAMtB,MAAM,MAAMvD,KAAK,kBAM/C,IAGZ,kBAAC0D,EAAA,EAAKE,MAAN,CAAY5D,KAAK,mBAAmBhD,MAAOwF,KAAK7G,MAAMK,iBAAkB+J,QAASC,IACrEhC,MAAM,oBAAoBC,YAAY,qBACtCC,SAAU1B,KAAK1C,eAC3B,kBAAC4D,EAAA,EAAKgB,OAAN,wBAC6B,IAA5BlC,KAAK7G,MAAMS,MAAM0C,OAAe,kBAACmH,EAAA,EAAD,CAC7B7J,OAAK,EACL8J,OAAO,mBACPC,KAAM3D,KAAK7G,MAAMS,QAChB,IAET,6BACA,oC,GAxbNgK,IAAMC,WCAxBC,IAASC,OACL,kBAAC,EAAD,MACF/I,SAAS4D,eAAe,W","file":"static/js/main.d797b25b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {Form, Grid, Header, Menu, Message, TextArea, Button, Icon, List} from 'semantic-ui-react';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        eventName: \"\",\r\n        eventLocation: \"\",\r\n        start: \"\",\r\n        end: \"\",\r\n        eventDescription: \"\",\r\n        repeat: \"No Repeat\",\r\n        class: \"PUBLIC\",\r\n        priority: \"9\",\r\n        error: [],\r\n        timezone: \"\",\r\n        RSVP: false,\r\n        toRSVP: \"\",\r\n        arrRSVP: [],\r\n        GEO: \"\",\r\n        sender: \"\",\r\n        resources: [],\r\n        resource: '',\r\n        emailError: false,\r\n        repeatOptions: [\r\n            {key: 'n', value: \"No Repeat\", text: 'No Repeat'},\r\n            {key: 'd', value: 'DAILY', text: 'Daily'},\r\n            {key: 'w', value: 'WEEKLY', text: 'Weekly'},\r\n            {key: 'm', value: 'MONTHLY', text: 'Monthly'},\r\n            {key: 'y', value: 'YEARLY', text: 'Yearly'},\r\n        ],\r\n        classOptions: [\r\n            {key: 'u', value: 'PUBLIC', text: 'Public'},\r\n            {key: 'r', value: 'PRIVATE', text: 'Private'},\r\n            {key: 's', value: 'CONFIDENTIAL', text: 'Confidential'},\r\n        ],\r\n        priorityOptions: [\r\n            {key: 'l', value: '9', text: 'Low'},\r\n            {key: 'm', value: '5', text: 'Medium'},\r\n            {key: 'h', value: '1', text: 'High'},\r\n        ],\r\n    };\r\n\r\n    componentDidMount() {\r\n        let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n        let xhr = new XMLHttpRequest();\r\n        xhr.responseType = \"text\";//force the HTTP response, response-type header to be blob\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState === 4 && xhr.status === 200) {\r\n                let arr = xhr.response.split(\"\\r\\n\");\r\n                let result = arr.slice(arr.indexOf(\"BEGIN:VTIMEZONE\"), arr.indexOf(\"END:VTIMEZONE\") + 1).join(\"\\r\\n\");\r\n                this.setState({timezone: result});\r\n            }\r\n        }.bind(this);\r\n        xhr.open(\"GET\", `https://cors-anywhere.herokuapp.com/http://tzurl.org/zoneinfo-outlook/${timezone}`);\r\n        xhr.send();\r\n        this.initAutocomplete();\r\n    }\r\n\r\n    submit = (e) => {\r\n        e.preventDefault();\r\n        let element = document.createElement('a');\r\n        let date = new Date();\r\n        let startDate = new Date(this.state.start);\r\n        let endDate = new Date(this.state.end);\r\n        let formError = false;\r\n        let errorMessages = [];\r\n\r\n        //Date checking\r\n        if (startDate > endDate) {\r\n            formError = true;\r\n            errorMessages.push(\"The event start date cannot be later than the event end date!\");\r\n        }\r\n\r\n        let currentDateTime = date.getFullYear() + '' +\r\n            +'' + (date.getMonth() + 1) + '' + (\"0\" + date.getDate()).slice(-2) + 'T' +\r\n            (\"0\" + date.getHours()).slice(-2) + '' + (\"0\" + date.getMinutes()).slice(-2) + '' +\r\n            (\"0\" + date.getSeconds()).slice(-2);\r\n        let recurrence = '';\r\n        let classification = '';\r\n        let priority = '';\r\n        let timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n        let RSVP = '';\r\n        let resource = 'RESOURCE:';\r\n\r\n        if (this.state.repeat !== 'No Repeat') {\r\n            recurrence += 'RRULE:FREQ=' + this.state.repeat + '\\r\\n';\r\n        }\r\n\r\n        if (this.state.class !== '') {\r\n            classification += 'CLASS:' + this.state.class + '\\r\\n';\r\n        }\r\n\r\n        if (this.state.priority !== '') {\r\n            priority += 'PRIORITY:' + this.state.priority + '\\r\\n';\r\n        }\r\n\r\n        if (this.state.RSVP === true) {\r\n            this.state.arrRSVP.forEach(\r\n                (value) => RSVP += 'ATTENDEE;CUTYPE=INDIVIDUAL;ROLE=REQ-PARTICIPANT;PARTSTAT=NEEDS-ACTION;\\r\\n RSVP=TRUE:MAILTO:' + value + '\\r\\n'\r\n            )\r\n        }\r\n\r\n        if (this.state.resources.length !== 0) {\r\n            this.state.resources.forEach(\r\n                (value) => (resource.substring(resource.indexOf('\\n')).length + value.length > 28) ? resource += `\\r\\n ${value},` : resource += `${value},`\r\n            );\r\n            resource = resource.substring(0, resource.length - 1);\r\n            resource += '\\r\\n';\r\n        }\r\n\r\n\r\n        element.setAttribute('href', 'data:text/calendar;charset=utf-8,' +\r\n            //Starting Calendar\r\n            'BEGIN:VCALENDAR\\r\\n' +\r\n            //Calendar Version\r\n            'VERSION:2.0\\r\\n' +\r\n            'PRODID:-//Team-emm-too//Kalendae//EN\\r\\n' +\r\n            //Calendar Type\r\n            'CALSCALE:GREGORIAN\\r\\n' +\r\n            'METHOD:PUBLISH\\r\\n' +\r\n            //Timezone info\r\n            this.state.timezone + \"\\r\\n\" +\r\n            //Starting Event\r\n            'BEGIN:VEVENT\\r\\n' +\r\n            \"UID:\" + currentDateTime + \"-kalendae@ics414.com\\r\\n\" +\r\n            'SEQUENCE:0\\r\\n' +\r\n            // Time event was created\r\n            'DTSTAMP;TZID=' + timezone + \":\" + currentDateTime + '\\r\\n' +\r\n            //Start time of event\r\n            'DTSTART;TZID=' + timezone + \":\" + this.state.start.split('-').join('').replace(':', '') + '00\\r\\n' +\r\n            //End time of event\r\n            'DTEND;TZID=' + timezone + \":\" + this.state.end.split('-').join('').replace(':', '') + '00\\r\\n' +\r\n            //Event Name\r\n            'SUMMARY:' + this.state.eventName + '\\r\\n' +\r\n            //Event Description\r\n            'DESCRIPTION:' + this.state.eventDescription + '\\r\\n' +\r\n            //Event Location\r\n            'LOCATION:' + this.state.eventLocation + '\\r\\n' +\r\n            //GEO LOCATION\r\n            'GEO:' + this.state.GEO + '\\r\\n' +\r\n            //Recurrence\r\n            recurrence +\r\n            //Classification\r\n            classification +\r\n            //Priority\r\n            priority +\r\n            //Organizer(Sender)\r\n            \"ORGANIZER:MAILTO:\" + this.state.sender + '\\r\\n' +\r\n            //Attendee\r\n            RSVP +\r\n            //Resources\r\n            resource +\r\n            //Ending Event\r\n            'END:VEVENT\\r\\n' +\r\n            //Ending Calendar\r\n            'END:VCALENDAR\\r\\n');\r\n\r\n        if (!formError) {\r\n            element.setAttribute('download', this.state.eventName + \".ics\");\r\n\r\n            element.style.display = 'none';\r\n\r\n            document.body.appendChild(element);\r\n\r\n            element.click();\r\n\r\n            document.body.removeChild(element);\r\n\r\n            this.setState({\r\n                eventName: \"\",\r\n                eventLocation: \"\",\r\n                start: \"\",\r\n                end: \"\",\r\n                eventDescription: \"\",\r\n                repeat: \"No Repeat\",\r\n                class: \"PUBLIC\",\r\n                priority: \"9\",\r\n                error: [],\r\n                RSVP: false,\r\n                toRSVP: \"\",\r\n                arrRSVP: [],\r\n                GEO: \"\",\r\n                sender: \"\",\r\n                resources: [],\r\n                resource: '',\r\n                emailError: false\r\n            });\r\n        } else {\r\n            console.log(\"error\");\r\n            this.setState({error: errorMessages});\r\n        }\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    handlePlaceChange = (place) => {\r\n        this.setState({\r\n            eventLocation: place.formatted_address,\r\n            GEO: `${place.geometry.location.lat()};${place.geometry.location.lng()}`\r\n        });\r\n    }\r\n\r\n    showRSVP = () => {\r\n        this.setState({RSVP: !this.state.RSVP});\r\n    }\r\n\r\n    handleRSVP = () => {\r\n        //email checking\r\n        let email = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(.\\w{2,3})+$/.test(this.state.toRSVP);\r\n\r\n        if (email && this.state.arrRSVP.indexOf(this.state.toRSVP) === -1) {\r\n            let arr = this.state.arrRSVP;\r\n            arr.push(this.state.toRSVP);\r\n            this.setState({arrRSVP: arr, toRSVP: '', emailError: false});\r\n        } else if (email === false) {\r\n            this.setState({emailError: true});\r\n        } else {\r\n            this.setState({toRSVP: '', emailError: false});\r\n        }\r\n\r\n    }\r\n\r\n    handleResources = () => {\r\n        if (this.state.resources.indexOf(this.state.resource) === -1) {\r\n            let arr = this.state.resources;\r\n            arr.push(this.state.resource);\r\n            this.setState({resources: arr, resource: ''});\r\n        } else {\r\n            this.setState({resource: ''});\r\n        }\r\n\r\n        console.log(this.state.resources);\r\n    }\r\n\r\n    handleRemove = (value) => {\r\n        let index = this.state.arrRSVP.indexOf(value);\r\n        let arr = this.state.arrRSVP.slice();\r\n        arr.splice(index, 1);\r\n        this.setState({arrRSVP: arr});\r\n        console.log(index, arr);\r\n    }\r\n\r\n    handleResourceRemove = (value) => {\r\n        let index = this.state.resources.indexOf(value);\r\n        let arr = this.state.resources.slice();\r\n        arr.splice(index, 1);\r\n        this.setState({resources: arr});\r\n        console.log(index, arr, value);\r\n    }\r\n\r\n    initAutocomplete = () => {\r\n\r\n        // Create the search box and link it to the UI element.\r\n        const input = document.getElementById(\"pac-input\");\r\n        const searchBox = new window.google.maps.places.Autocomplete(input);\r\n\r\n        // Listen for the event fired when the user selects a prediction and retrieve\r\n        // more details for that place.\r\n        searchBox.addListener(\"place_changed\", () => {\r\n            const place = searchBox.getPlace();\r\n            this.handlePlaceChange(place)\r\n        });\r\n    }\r\n\r\n    handleEnter = (event) => {\r\n        if (event.which === 13) {\r\n            event.preventDefault();\r\n            if (event.target.name === 'resource') {\r\n                this.handleResources();\r\n            } else if (event.target.name === 'toRSVP') {\r\n                this.handleRSVP();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Menu size=\"huge\" inverted>\r\n                    <Grid style={{margin: \"3px 0px 2px 0px\"}}>\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n                                <Header as=\"h1\" textAlign=\"center\" style={{color: \"white\"}}>Kalendae</Header>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </Menu>\r\n\r\n                <Grid container stretched>\r\n                    <Grid.Column>\r\n                        <Header as=\"h2\" textAlign=\"center\" className='white'>Add an Event!</Header>\r\n                        <Form onSubmit={this.submit} error>\r\n                            <Form.Input style={{paddingBottom: \"30px\"}} required fluid name='eventName'\r\n                                        value={this.state.eventName} label='Event Name'\r\n                                        placeholder='Ex. New Year Party' onChange={this.handleChange}/>\r\n\r\n                            <Form.Group widths='equal' style={{paddingBottom: \"30px\"}}>\r\n                                <Form.Input id=\"pac-input\" required name='eventLocation'\r\n                                            value={this.state.eventLocation}\r\n                                            label='Location'\r\n                                            placeholder='Ex. 1234 Foo St. Honolulu, HI 96821'\r\n                                            onChange={this.handleChange}\r\n                                />\r\n                                <Form.Input required name='start' value={this.state.start} label='Start Date'\r\n                                            type='datetime-local'\r\n                                            onChange={this.handleChange}/>\r\n                                <Form.Input required name='end' value={this.state.end} label='End Date'\r\n                                            type='datetime-local'\r\n                                            onChange={this.handleChange}/>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group widths='equal' style={{paddingBottom: \"30px\"}}>\r\n                                <Form.Select name='repeat' value={this.state.repeat} label='Repeat'\r\n                                             options={this.state.repeatOptions}\r\n                                             onChange={\r\n                                                 (e, {value}) => {\r\n                                                     this.setState({repeat: value});\r\n                                                 }\r\n                                             }\r\n                                />\r\n                                <Form.Select name='classification' value={this.state.class} label='Classification'\r\n                                             options={this.state.classOptions}\r\n                                             onChange={\r\n                                                 (e, {value}) => {\r\n                                                     this.setState({class: value});\r\n                                                 }\r\n                                             }\r\n                                />\r\n                                <Form.Select name='priority' value={this.state.priority} label='Priority'\r\n                                             options={this.state.priorityOptions}\r\n                                             onChange={\r\n                                                 (e, {value}) => {\r\n                                                     this.setState({priority: value});\r\n                                                 }\r\n                                             }\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group style={{paddingBottom: \"30px\"}}>\r\n                                <Form.Input\r\n                                    action={\r\n                                        <Button type=\"button\" onClick={this.handleResources} icon>\r\n                                            <Icon name=\"add\"/>\r\n                                        </Button>}\r\n                                    type='text' value={this.state.resource} name='resource' label='Resources'\r\n                                    placeholder='Ex. Projector, Camera, etc.' onChange={this.handleChange}\r\n                                    onKeyDown={this.handleEnter}/>\r\n                                <Grid container>\r\n                                    <Grid.Row centered verticalAlign=\"middle\" style={{padding: \"0 0 0 0\"}}>\r\n                                        <Grid.Column>\r\n                                            <Header as='h5' textAlign=\"center\" style={{height: \"15px\"}}>Resource\r\n                                                List</Header>\r\n                                        </Grid.Column>\r\n                                    </Grid.Row>\r\n                                    <Grid.Row id=\"resource\" stretched>\r\n                                        <List ordered horizontal>\r\n                                            {this.state.resources.map((value) =>\r\n                                                <List.Item key={value}>\r\n                                                    {value}\r\n                                                    <Button style={{backgroundColor: 'transparent'}} type='button'\r\n                                                            size='tiny'\r\n                                                            value={value}\r\n                                                            onClick={() => this.handleResourceRemove(value)}\r\n                                                            icon\r\n                                                            circular>\r\n                                                        <Icon color='red' name='close'/>\r\n                                                    </Button>\r\n                                                </List.Item>)}\r\n                                        </List>\r\n                                    </Grid.Row>\r\n                                </Grid>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Radio name='RSVP' label='RSVP' toggle onChange={this.showRSVP}/>\r\n                            </Form.Group>\r\n                            <Form.Group style={{paddingBottom: \"40px\"}}>\r\n                                {this.state.RSVP === true && this.state.emailError === false ?\r\n                                    <Form.Input id=\"toRSVP\" action={\r\n                                        <Button type=\"button\" onClick={this.handleRSVP} icon>\r\n                                            <Icon name=\"add\"/>\r\n                                        </Button>}\r\n                                                type='email' value={this.state.toRSVP} multiple name='toRSVP'\r\n                                                label='RSVP To'\r\n                                                placeholder='Ex. attendee@email.com' onChange={this.handleChange}\r\n                                                onKeyDown={this.handleEnter}/> :\r\n                                    (this.state.emailError && this.state.RSVP) ?\r\n                                        <Form.Input id=\"toRSVP\"\r\n                                                    error={{content: 'Please enter a valid email', pointing: 'below'}}\r\n                                                    action={\r\n                                                        <Button type=\"button\" onClick={this.handleRSVP} icon>\r\n                                                            <Icon name=\"add\"/>\r\n                                                        </Button>}\r\n                                                    type='email' value={this.state.toRSVP} multiple name='toRSVP'\r\n                                                    label='RSVP To'\r\n                                                    placeholder='Ex. attendee@email.com' onChange={this.handleChange}\r\n                                                    onKeyDown={this.handleEnter}/> : \"\"}\r\n\r\n                                {this.state.RSVP === true ?\r\n                                    <Form.Input required type='email' value={this.state.sender} name='sender'\r\n                                                label='Organizer Email'\r\n                                                placeholder='Ex. organizer@email.com'\r\n                                                onChange={this.handleChange}/> : \"\"}\r\n                                {this.state.RSVP === true ?\r\n                                    (\r\n                                        <Grid container>\r\n                                            <Grid.Row centered verticalAlign=\"middle\" style={{padding: \"0 0 0 0\"}}>\r\n                                                <Grid.Column>\r\n                                                    <Header as='h5' textAlign=\"center\" style={{height: \"15px\"}}>Attendee\r\n                                                        List</Header>\r\n                                                </Grid.Column>\r\n                                            </Grid.Row>\r\n                                            <Grid.Row id='attendee' stretched>\r\n                                                <List ordered horizontal>\r\n                                                    {this.state.arrRSVP.map((value) =>\r\n                                                        <List.Item key={value}>\r\n                                                            {value}\r\n                                                            <Button style={{backgroundColor: 'transparent'}}\r\n                                                                    type='button' size='tiny'\r\n                                                                    value={value}\r\n                                                                    onClick={() => this.handleRemove(value)}\r\n                                                                    icon circular>\r\n                                                                <Icon color='red' name='close'/>\r\n                                                            </Button>\r\n                                                        </List.Item>)}\r\n                                                </List>\r\n                                            </Grid.Row>\r\n                                        </Grid>\r\n                                    ) : \"\"}\r\n                            </Form.Group>\r\n\r\n                            <Form.Input name='eventDescription' value={this.state.eventDescription} control={TextArea}\r\n                                        label='Event Description' placeholder='Ex. New Year Party'\r\n                                        onChange={this.handleChange}/>\r\n                            <Form.Button>Submit/Download</Form.Button>\r\n                            {this.state.error.length !== 0 ? <Message\r\n                                error\r\n                                header='Action Forbidden'\r\n                                list={this.state.error}\r\n                            /> : \"\"}\r\n                        </Form>\r\n                        <br/>\r\n                        <br/>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}